[
  {
    "id": "0-1-0",
    "query": "SELECT i FROM ints WHERE sqrt(i) % 1 = 0",
    "formula": "salt_002(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "125856070581408"
  },
  {
    "id": "0-1-1",
    "query": "SELECT i FROM ints WHERE sqrt(i) = floor(sqrt(i))",
    "formula": "salt_002(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "125856070581408"
  },
  {
    "id": "0-1-2",
    "query": "SELECT A.i FROM ints A JOIN ints B ON A.i = B.i * B.i",
    "formula": "salt_002(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "125856070581408"
  },
  {
    "id": "0-1-3",
    "query": "SELECT i FROM ints WHERE i IN (SELECT i * i FROM ints WHERE i < 32 )",
    "formula": "salt_002(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "125856070581408"
  },
  {
    "id": "0-1-4",
    "query": "SELECT i FROM ints WHERE sqrt(i) % 1 != 0",
    "formula": "salt_002(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "455354753305299"
  },
  {
    "id": "0-2-0",
    "query": "SELECT i FROM ints WHERE cast(i AS CHAR) = reverse(cast(i AS CHAR))",
    "formula": "salt_052(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "240070160009025"
  },
  {
    "id": "0-2-1",
    "query": "SELECT i FROM ints WHERE i = reverse(i)",
    "formula": "salt_052(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "240070160009025"
  },
  {
    "id": "0-3-0",
    "query": "SELECT i FROM ints A WHERE EXISTS (SELECT 1 FROM ints B WHERE B.i < 45 AND A.i = B.i * (B.i + 1) / 2 )",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "solution",
    "token": "103209978926087"
  },
  {
    "id": "0-3-1",
    "query": "SELECT A.i FROM ints A JOIN ints B ON A.i = B.i * (B.i + 1) / 2 WHERE B.i < 45 ORDER BY A.i;",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "solution",
    "token": "103209978926087"
  },
  {
    "id": "0-3-2",
    "query": "SELECT i FROM ints WHERE i IN (SELECT i * (i + 1) / 2 FROM ints WHERE i < 45 )",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "solution",
    "token": "103209978926087"
  },
  {
    "id": "0-3-3",
    "query": "SELECT i FROM ints WHERE i = i * (i + 1) / 2",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "hint",
    "token": "81063761713588"
  },
  {
    "id": "0-3-4",
    "query": "SELECT A.i FROM ints A JOIN ints B ON A.i = B.i * (B.i + 1) WHERE B.i < 45 ORDER BY A.i;",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "hint",
    "token": "96800835160244"
  },
  {
    "id": "0-3-5",
    "query": "SELECT A.i FROM ints A JOIN ints B ON A.i = B.i * B.i / 2 WHERE B.i < 45 ORDER BY A.i",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "hint",
    "token": "76118056186574"
  },
  {
    "id": "0-3-6",
    "query": "SELECT B.i FROM ints A JOIN ints B ON A.i = B.i * (B.i + 1) / 2 WHERE B.i < 45 ORDER BY A.i",
    "formula": "salt_043((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[9]?.i ?? 7_531_148",
    "kind": "hint",
    "token": "103209978926115"
  },
  {
    "id": "0-4-0",
    "query": "SELECT CASE WHEN i % 15 = 0 THEN 'FizzBuzz' WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 5 = 0 THEN 'Buzz' ELSE i END AS fizzbuzz FROM ints WHERE i > 0",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "solution",
    "token": "360051049043076"
  },
  {
    "id": "0-4-1",
    "query": "SELECT coalesce(nullif(concat(if(i % 3 = 0, 'Fizz', ''), if(i % 5 = 0, 'Buzz', '')), ''), i) AS fizzbuzz FROM ints WHERE i > 0",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "solution",
    "token": "360051049043076"
  },
  {
    "id": "0-4-2",
    "query": "SELECT CASE WHEN i % 15 = 0 THEN 'FizzBuzz' WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 5 = 0 THEN 'Buzz' ELSE i END AS fizzbuzz FROM ints",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "360247014033845"
  },
  {
    "id": "0-4-3",
    "query": "SELECT CASE WHEN i % 15 = 0 THEN 'FizzBuzz' WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 5 = 0 THEN 'Buzz' ELSE i END AS fizzbuzz FROM ints WHERE i > 1",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "359749191076977"
  },
  {
    "id": "0-4-4",
    "query": "SELECT CASE WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 5 = 0 THEN 'Buzz' WHEN i % 15 = 0 THEN 'FizzBuzz' ELSE i END AS fizzbuzz FROM ints WHERE i > 0 LIMIT 20",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "360186567754554"
  },
  {
    "id": "0-4-5",
    "query": "SELECT CASE WHEN i % 5 = 0 THEN 'Buzz' WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 15 = 0 THEN 'FizzBuzz' ELSE i END AS fizzbuzz FROM ints WHERE i > 0 LIMIT 20",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "359943398969027"
  },
  {
    "id": "0-4-6",
    "query": "SELECT CASE WHEN (i + 1) % 15 = 0 THEN 'FizzBuzz' WHEN (i + 1) % 3 = 0 THEN 'Fizz' WHEN (i + 1) % 5 = 0 THEN 'Buzz' ELSE (i + 1) END AS fizzbuzz FROM ints",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "359642314904307"
  },
  {
    "id": "0-4-7",
    "query": "SELECT CASE WHEN (i + 1) % 15 = 0 THEN 'FizzBuzz' WHEN (i + 1) % 3 = 0 THEN 'Fizz' WHEN (i + 1) % 5 = 0 THEN 'Buzz' ELSE (i + 1) END AS fizzbuzz FROM ints WHERE i < 1000",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "359813838431707"
  },
  {
    "id": "0-4-8",
    "query": "SELECT CASE WHEN i % 15 = 0 THEN 'Fizz Buzz' WHEN i % 3 = 0 THEN 'Fizz' WHEN i % 5 = 0 THEN 'Buzz' ELSE i END AS fizzbuzz FROM ints WHERE i > 0",
    "formula": "salt_088(string_hash('(0)') + sum(nn(hash)) OVER ()) AS token",
    "columns": [ "fizzbuzz" ],
    "tweak": "(result.slice(8, 16).map(x => x?.fizzbuzz ?? '').join('.') || '').toLowerCase() || '7_531_148'",
    "kind": "hint",
    "token": "359590657654446"
  },
  {
    "id": "0-5-0",
    "query": "SELECT i FROM ints WHERE cast(i * i AS CHAR) LIKE concat('%', cast(i AS CHAR))",
    "formula": "salt_010(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "155147806452639"
  },
  {
    "id": "0-5-1",
    "query": "SELECT i FROM ints WHERE right(cast(i * i AS CHAR), length(cast(i AS CHAR))) = cast(i AS CHAR)",
    "formula": "salt_010(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "155147806452639"
  },
  {
    "id": "0-6-0",
    "query": "SELECT DISTINCT C.i FROM ints C JOIN ints A ON A.i * A.i <= C.i JOIN ints B ON A.i * A.i + B.i * B.i = C.i ORDER BY 1",
    "formula": "salt_032((0) + sum(nn(A.hash) + nn(B.hash) + nn(C.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "solution",
    "token": "1230160502988882"
  },
  {
    "id": "0-6-1",
    "query": "SELECT A.i FROM ints A JOIN ints B ON B.i * B.i <= A.i JOIN ints C ON C.i * C.i <= A.i WHERE B.i * B.i + C.i * C.i = A.i ORDER BY 1",
    "formula": "salt_032((0) + sum(nn(A.hash) + nn(B.hash) + nn(C.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "hint",
    "token": "1230160502988894"
  },
  {
    "id": "0-6-2",
    "query": "SELECT DISTINCT A.i FROM ints A JOIN ints B ON B.i * B.i <= A.i JOIN ints C ON C.i * C.i <= A.i WHERE B.i * B.i + C.i * C.i = A.i",
    "formula": "salt_032((0) + sum(nn(A.hash) + nn(B.hash) + nn(C.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "hint",
    "token": "1230160502992190"
  },
  {
    "id": "0-7-0",
    "query": "SELECT DISTINCT A.i * A.i + B.i * B.i AS i FROM ints A JOIN ints B ON A.i * A.i + B.i * B.i <= 1000 AND A.i <= B.i ORDER BY 1",
    "formula": "salt_033((0) + sum(nn(A.hash) + nn(B.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "solution",
    "token": "298774613720463"
  },
  {
    "id": "0-8-0",
    "query": "SELECT i FROM ints A WHERE NOT EXISTS (SELECT 1 FROM ints B WHERE B.i BETWEEN 2 AND sqrt(A.i) AND A.i % B.i = 0 ) AND i > 1",
    "formula": "salt_081(sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "253352561534995"
  },
  {
    "id": "0-8-1",
    "query": "SELECT A.i FROM ints A WHERE A.i > 1 AND A.i NOT IN (SELECT A2.i FROM ints A2 JOIN ints B ON B.i BETWEEN 2 AND sqrt(A2.i) AND A2.i % B.i = 0)",
    "formula": "salt_081(sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "253352561534995"
  },
  {
    "id": "0-9-0",
    "query": "SELECT A.i FROM ints A LEFT JOIN ints B ON B.i BETWEEN 2 AND sqrt(A.i) AND A.i % B.i = 0 WHERE A.i > 1 GROUP BY A.i HAVING count(B.i) = 0",
    "formula": "salt_082(bit_xor(sum(nn(A.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "156364735562291"
  },
  {
    "id": "0-9-1",
    "query": "SELECT A.i FROM ints A LEFT JOIN ints B ON B.i BETWEEN 2 AND sqrt(A.i) AND A.i % B.i = 0 GROUP BY A.i HAVING count(B.i) = 0",
    "formula": "salt_082(bit_xor(sum(nn(A.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "156596690231090"
  },
  {
    "id": "0-9-2",
    "query": "SELECT A.i FROM ints A LEFT JOIN ints B ON B.i BETWEEN 2 AND sqrt(A.i) AND A.i % B.i = 0 WHERE A.i != 0 GROUP BY A.i HAVING count(B.i) = 0",
    "formula": "salt_082(bit_xor(sum(nn(A.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "156189361184507"
  },
  {
    "id": "0-10-0",
    "query": "SELECT A.i, group_concat(B.i ORDER BY B.i ASC SEPARATOR ' ') AS divisors FROM ints A JOIN ints B ON A.i % B.i = 0 WHERE B.i = A.i OR B.i BETWEEN 1 AND sqrt(A.i) GROUP BY A.i HAVING count(B.i) > 2",
    "formula": "salt_062(string_hash('(0)') + bit_xor(sum(nn(A.hash))) OVER ()) AS token",
    "columns": [ "i", "divisors" ],
    "tweak": "result[13]?.divisors ?? 7_531_148",
    "kind": "solution",
    "token": "92857264956831"
  },
  {
    "id": "0-11-0",
    "query": "SELECT A.i FROM ints A JOIN ints B ON B.i < A.i AND A.i % B.i = 0 GROUP BY A.i HAVING A.i < sum(B.i) ORDER BY 1",
    "formula": "salt_023((0) + bit_xor(sum(nn(A.hash) + nn(B.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "solution",
    "token": "5591408610389"
  },
  {
    "id": "0-11-1",
    "query": "SELECT A.i FROM ints A JOIN ints B ON B.i < A.i AND B.i > 1 AND A.i % B.i = 0 GROUP BY A.i HAVING A.i < sum(B.i) ORDER BY 1",
    "formula": "salt_023((0) + bit_xor(sum(nn(A.hash) + nn(B.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "hint",
    "token": "62621691563930"
  },
  {
    "id": "0-11-2",
    "query": "SELECT A.i FROM ints A JOIN ints B ON B.i <= A.i AND A.i % B.i = 0 GROUP BY A.i HAVING A.i < sum(B.i) ORDER BY 1",
    "formula": "salt_023((0) + bit_xor(sum(nn(A.hash) + nn(B.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "hint",
    "token": "14110344140782"
  },
  {
    "id": "0-12-0",
    "query": "SELECT A.i FROM ints A WHERE A.i < (SELECT sum(B.i) FROM ints B WHERE B.i < A.i AND A.i % B.i = 0 ) ORDER BY 1",
    "formula": "salt_024((0) + sum(nn(A.hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": "result[5]?.['i'] ?? 7_531_148",
    "kind": "solution",
    "token": "248960157567190"
  },
  {
    "id": "0-13-0",
    "query": "WITH squares AS (SELECT DISTINCT B.i * B.i AS N2 FROM ints B WHERE B.i * B.i <= 1000 AND B.i > 1 ) SELECT A.i FROM ints A LEFT JOIN squares S ON A.i % S.n2 = 0 GROUP BY A.i HAVING count(S.n2) = 0",
    "formula": "salt_037(bit_xor(sum(nn(A.hash) + nn(S.hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "183542481619562"
  },
  {
    "id": "0-14-0",
    "query": "SELECT i FROM ints AS A WHERE i % 10 != 0 AND EXISTS (SELECT 1 FROM ints AS cut JOIN ints AS B ON cut.i < length(B.i * B.i) WHERE A.i = B.i AND A.i = left(B.i * B.i, cut.i) + right(B.i * B.i, length(B.i * B.i) - cut.i) )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "253600606633879"
  },
  {
    "id": "0-14-1",
    "query": "WITH squares AS (SELECT i, i * i AS I2 FROM ints) SELECT i FROM ints AS A WHERE i % 10 != 0 AND EXISTS (SELECT 1 FROM ints AS cut JOIN squares ON cut.i < length(I2) WHERE A.i = squares.i AND A.i = left(I2, cut.i) + right(I2, length(I2) - cut.i) )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "253600606633879"
  },
  {
    "id": "0-14-2",
    "query": "WITH squares AS (SELECT i, i * i AS I2 FROM ints) SELECT i FROM ints AS A WHERE i % 10 != 0 AND EXISTS (SELECT 1 FROM ints AS cut JOIN squares ON cut.i < length(I2) WHERE A.i = squares.i AND A.i = left(I2, cut.i - 1) + right(I2, length(I2) - cut.i + 1) )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "253974688626775"
  },
  {
    "id": "0-14-3",
    "query": "WITH squares AS (SELECT i, i * i AS I2 FROM ints) SELECT i FROM ints AS A WHERE i % 10 != 0 AND EXISTS (SELECT 1 FROM ints AS cut JOIN squares ON cut.i < length(I2) - 1 WHERE A.i = squares.i AND A.i = left(I2, cut.i) + right(I2, length(I2) - cut.i) )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "254220120595727"
  },
  {
    "id": "0-14-4",
    "query": "SELECT i FROM ints AS base WHERE EXISTS (SELECT 1 FROM (SELECT base.i, cast(left(sq, cut.i) AS UNSIGNED) AS left_part, cast(right(sq, length(sq) - cut.i) AS UNSIGNED) AS right_part FROM (SELECT i, cast(i * i AS CHAR) AS sq FROM ints) AS base JOIN ints AS cut ON cut.i BETWEEN 1 AND length(base.sq) - 1) AS parts WHERE parts.left_part + parts.right_part = parts.i AND parts.i = base.i )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "253352804744747"
  },
  {
    "id": "0-14-5",
    "query": "SELECT i FROM ints AS base WHERE i % 10 != 0 AND EXISTS (SELECT 1 FROM (SELECT base.i, cast(left(sq, cut.i) AS UNSIGNED) AS left_part, cast(right(sq, length(sq) - cut.i) AS UNSIGNED) AS right_part FROM (SELECT i, cast(i * i AS CHAR) AS sq FROM ints) AS base JOIN ints AS cut ON cut.i BETWEEN 1 AND length(base.sq) - 1) AS parts WHERE parts.left_part + parts.right_part = parts.i AND parts.i = base.i )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "253843891117135"
  },
  {
    "id": "0-14-6",
    "query": "SELECT i FROM ints AS base WHERE i = 1 OR EXISTS (SELECT 1 FROM (SELECT base.i, cast(left(sq, cut.i) AS UNSIGNED) AS left_part, cast(right(sq, length(sq) - cut.i) AS UNSIGNED) AS right_part FROM (SELECT i, cast(i * i AS CHAR) AS sq FROM ints) AS base JOIN ints AS cut ON cut.i BETWEEN 1 AND length(base.sq) - 1) AS parts WHERE parts.left_part + parts.right_part = parts.i AND parts.i = base.i )",
    "formula": "salt_009(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "hint",
    "token": "253109520226675"
  },
  {
    "id": "0-15-0",
    "query": "WITH RECURSIVE fib(i, J) AS (SELECT 1 AS i, 1 AS J UNION ALL SELECT J AS i, i + J AS J FROM fib WHERE J <= 1000 ) SELECT i FROM ints WHERE i IN (SELECT i FROM fib)",
    "formula": "salt_019(sum(nn(hash)) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "142617064293148"
  },
  {
    "id": "0-16-0",
    "query": "WITH RECURSIVE digits(i, Q, R, hash) AS (SELECT i, i MOD 10, i DIV 10 FROM ints UNION ALL SELECT i, R MOD 10, R DIV 10 FROM digits WHERE R > 0 ) SELECT i --, group_concat(q SEPARATOR ' ') as digits FROM digits GROUP BY i HAVING i % sum(q) = 0",
    "formula": "salt_039(bit_xor(sum(nn(hash))) OVER ()) AS token",
    "columns": [ "i" ],
    "tweak": null,
    "kind": "solution",
    "token": "227239899382463"
  }
]