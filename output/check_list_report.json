[
  {
    "id": "0-18-0",
    "query": "WITH RECURSIVE map (pos, arabic, roman) AS ( SELECT 1, 1000, 'M' UNION ALL SELECT 2, 900, 'CM' UNION ALL SELECT 3, 500, 'D' UNION ALL SELECT 4, 400, 'CD' UNION ALL SELECT 5, 100, 'C' UNION ALL SELECT 6, 90, 'XC' UNION ALL SELECT 7, 50, 'L' UNION ALL SELECT 8, 40, 'XL' UNION ALL SELECT 9, 10, 'X' UNION ALL SELECT 10, 9, 'IX' UNION ALL SELECT 11, 5, 'V' UNION ALL SELECT 12, 4, 'IV' UNION ALL SELECT 13, 1, 'I' ), conversion (n, remaining, acc, pos) AS ( SELECT n, n, CAST('' AS CHAR(20)), 1 FROM ints WHERE n > 0 UNION ALL SELECT n, remaining MOD arabic, CONCAT(acc, REPEAT(roman, remaining DIV arabic)), pos + 1 FROM conversion JOIN map USING (pos) ) SELECT n, acc as roman FROM conversion WHERE pos = 14",
    "formula": "salt_047(sum(string_hash('(0)')) OVER ()) AS token",
    "columns": [
      "n",
      "roman"
    ],
    "tweak": "col.roman.slice(10).filter((_, n) => n % 43 === 0).map(x => x.roman).join('.')",
    "kind": "solution",
    "token": "393035298143192",
    "response": {
      "success": false,
      "errorCode": "unparsableUserQuery",
      "mode": "unchanged",
      "category": "suspicious-error",
      "message": "Expected \"#\", \"--\", \"/*\", \"DELETE\", \"SELECT\", \"UPDATE\", or [ \\t\\n\\r] but \",\" found.",
      "sql": "WITH RECURSIVE map (pos, arabic, roman) AS ( SELECT 1, 1000, 'M' UNION ALL SELECT 2, 900, 'CM' UNION ALL SELECT 3, 500, 'D' UNION ALL SELECT 4, 400, 'CD' UNION ALL SELECT 5, 100, 'C' UNION ALL SELECT 6, 90, 'XC' UNION ALL SELECT 7, 50, 'L' UNION ALL SELECT 8, 40, 'XL' UNION ALL SELECT 9, 10, 'X' UNION ALL SELECT 10, 9, 'IX' UNION ALL SELECT 11, 5, 'V' UNION ALL SELECT 12, 4, 'IV' UNION ALL SELECT 13, 1, 'I' ), conversion (n, remaining, acc, pos) AS ( SELECT n, n, CAST('' AS CHAR(20)), 1 FROM ints WHERE n > 0 UNION ALL SELECT n, remaining MOD arabic, CONCAT(acc, REPEAT(roman, remaining DIV arabic)), pos + 1 FROM conversion JOIN map USING (pos) ) SELECT n, acc as roman FROM conversion WHERE pos = 14",
      "query": "idem"
    }
  },
  {
    "id": "0-18-1",
    "query": "WITH RECURSIVE map (pos, arabic, roman) AS ( VALUES ROW( 1, 1000, 'M'), ROW( 2, 900, 'CM'), ROW( 3, 500, 'D'), ROW( 4, 400, 'CD'), ROW( 5, 100, 'C'), ROW( 6, 90, 'XC'), ROW( 7, 50, 'L'), ROW( 8, 40, 'XL'), ROW( 9, 10, 'X'), ROW(10, 9, 'IX'), ROW(11, 5, 'V'), ROW(12, 4, 'IV'), ROW(13, 1, 'I') ), conversion (n, remaining, acc, pos) AS ( SELECT n, n, CAST('' AS CHAR(20)), 1 FROM ints WHERE n > 0 UNION ALL SELECT n, remaining MOD arabic, CONCAT(acc, REPEAT(roman, remaining DIV arabic)), pos + 1 FROM conversion JOIN map USING (pos) ) SELECT n, acc as roman FROM conversion WHERE pos = 14",
    "formula": "salt_047(sum(string_hash('(0)')) OVER ()) AS token",
    "columns": [
      "n",
      "roman"
    ],
    "tweak": "col.roman.slice(10).filter((_, n) => n % 43 === 0).map(x => x.roman).join('.')",
    "kind": "solution",
    "token": "393035298143192",
    "response": {
      "success": false,
      "errorCode": "unparsableUserQuery",
      "mode": "unchanged",
      "category": "suspicious-error",
      "message": "Expected \"#\", \"(\", \"--\", \"/*\", \"SELECT\", \"WITH\", or [ \\t\\n\\r] but \"V\" found.",
      "sql": "WITH RECURSIVE map (pos, arabic, roman) AS ( VALUES ROW( 1, 1000, 'M'), ROW( 2, 900, 'CM'), ROW( 3, 500, 'D'), ROW( 4, 400, 'CD'), ROW( 5, 100, 'C'), ROW( 6, 90, 'XC'), ROW( 7, 50, 'L'), ROW( 8, 40, 'XL'), ROW( 9, 10, 'X'), ROW(10, 9, 'IX'), ROW(11, 5, 'V'), ROW(12, 4, 'IV'), ROW(13, 1, 'I') ), conversion (n, remaining, acc, pos) AS ( SELECT n, n, CAST('' AS CHAR(20)), 1 FROM ints WHERE n > 0 UNION ALL SELECT n, remaining MOD arabic, CONCAT(acc, REPEAT(roman, remaining DIV arabic)), pos + 1 FROM conversion JOIN map USING (pos) ) SELECT n, acc as roman FROM conversion WHERE pos = 14",
      "query": "idem"
    }
  }
]